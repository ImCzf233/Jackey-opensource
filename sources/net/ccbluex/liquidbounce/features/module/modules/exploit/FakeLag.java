package net.ccbluex.liquidbounce.features.module.modules.exploit;

import java.util.LinkedList;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.UpdateEvent;
import net.ccbluex.liquidbounce.event.WorldEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.ClientUtils;
import net.ccbluex.liquidbounce.utils.MinecraftInstance;
import net.ccbluex.liquidbounce.utils.MovementUtils;
import net.ccbluex.liquidbounce.utils.PacketUtils;
import net.ccbluex.liquidbounce.utils.misc.RandomUtils;
import net.ccbluex.liquidbounce.utils.timer.MSTimer;
import net.ccbluex.liquidbounce.value.BoolValue;
import net.ccbluex.liquidbounce.value.IntegerValue;
import net.ccbluex.liquidbounce.value.ListValue;
import net.ccbluex.liquidbounce.value.TextValue;
import net.minecraft.network.INetHandler;
import net.minecraft.network.Packet;
import net.minecraft.network.play.INetHandlerPlayClient;
import net.minecraft.network.play.INetHandlerPlayServer;
import org.apache.log4j.Priority;
import org.jetbrains.annotations.NotNull;

/* compiled from: FakeLag.kt */
@Metadata(m51mv = {1, 6, 0}, m52k = 1, m49xi = 48, m54d1 = {"��t\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n��\n\u0002\u0018\u0002\n��\n\u0002\u0010\b\n��\n\u0002\u0018\u0002\n��\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u0002\n��\n\u0002\u0010\u000e\n\u0002\b\u0004\n\u0002\u0018\u0002\n��\n\u0002\u0018\u0002\n��\n\u0002\u0018\u0002\n��\b\u0007\u0018��2\u00020\u0001B\u0005¢\u0006\u0002\u0010\u0002J\u000e\u0010\u001e\u001a\u00020\u001f2\u0006\u0010 \u001a\u00020!J\b\u0010\"\u001a\u00020\u001fH\u0016J\b\u0010#\u001a\u00020\u001fH\u0016J\u0010\u0010$\u001a\u00020\u001f2\u0006\u0010%\u001a\u00020&H\u0007J\u0010\u0010'\u001a\u00020\u001f2\u0006\u0010%\u001a\u00020(H\u0007J\u0010\u0010)\u001a\u00020\u001f2\u0006\u0010%\u001a\u00020*H\u0007R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082\u0004¢\u0006\u0002\n��R\u000e\u0010\u0005\u001a\u00020\u0004X\u0082\u0004¢\u0006\u0002\n��R\u000e\u0010\u0006\u001a\u00020\u0007X\u0082\u0004¢\u0006\u0002\n��R\u000e\u0010\b\u001a\u00020\u0004X\u0082\u0004¢\u0006\u0002\n��R\u000e\u0010\t\u001a\u00020\u0007X\u0082\u0004¢\u0006\u0002\n��R\u000e\u0010\n\u001a\u00020\u000bX\u0082\u0004¢\u0006\u0002\n��R\u000e\u0010\f\u001a\u00020\u0004X\u0082\u0004¢\u0006\u0002\n��R\u001c\u0010\r\u001a\u0010\u0012\f\u0012\n\u0012\u0006\b\u0001\u0012\u00020\u00100\u000f0\u000eX\u0082\u0004¢\u0006\u0002\n��R\u001a\u0010\u0011\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00120\u000f0\u000eX\u0082\u0004¢\u0006\u0002\n��R\u000e\u0010\u0013\u001a\u00020\u0014X\u0082\u000e¢\u0006\u0002\n��R\u000e\u0010\u0015\u001a\u00020\u0016X\u0082\u0004¢\u0006\u0002\n��R\u000e\u0010\u0017\u001a\u00020\u0018X\u0082\u0004¢\u0006\u0002\n��R\u000e\u0010\u0019\u001a\u00020\u0018X\u0082\u0004¢\u0006\u0002\n��R\u001a\u0010\u001a\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u001b0\u000f0\u000eX\u0082\u0004¢\u0006\u0002\n��R\u000e\u0010\u001c\u001a\u00020\u0014X\u0082\u000e¢\u0006\u0002\n��R\u000e\u0010\u001d\u001a\u00020\u0016X\u0082\u0004¢\u0006\u0002\n��¨\u0006+"}, m53d2 = {"Lnet/ccbluex/liquidbounce/features/module/modules/exploit/FakeLag;", "Lnet/ccbluex/liquidbounce/features/module/Module;", "()V", "debugValue", "Lnet/ccbluex/liquidbounce/value/BoolValue;", "fakeLagExclude", "fakeLagExcludeClasses", "Lnet/ccbluex/liquidbounce/value/TextValue;", "fakeLagInclude", "fakeLagIncludeClasses", "fakeLagMode", "Lnet/ccbluex/liquidbounce/value/ListValue;", "fakeLagMoveOnly", "ignoreBus", "Ljava/util/LinkedList;", "Lnet/minecraft/network/Packet;", "Lnet/minecraft/network/INetHandler;", "inBus", "Lnet/minecraft/network/play/INetHandlerPlayClient;", "inDelay", "", "inTimer", "Lnet/ccbluex/liquidbounce/utils/timer/MSTimer;", "maxRand", "Lnet/ccbluex/liquidbounce/value/IntegerValue;", "minRand", "outBus", "Lnet/minecraft/network/play/INetHandlerPlayServer;", "outDelay", "outTimer", "debug", "", "s", "", "onDisable", "onEnable", "onPacket", "event", "Lnet/ccbluex/liquidbounce/event/PacketEvent;", "onUpdate", "Lnet/ccbluex/liquidbounce/event/UpdateEvent;", "onWorld", "Lnet/ccbluex/liquidbounce/event/WorldEvent;", "LiquidBounce"})
@ModuleInfo(name = "FakeLag", spacedName = "Fake Lag", description = "Lagging yourself server-side, and client-side.", category = ModuleCategory.EXPLOIT)
/* loaded from: Jackey Client b2.jar:net/ccbluex/liquidbounce/features/module/modules/exploit/FakeLag.class */
public final class FakeLag extends Module {
    @NotNull
    private final ListValue fakeLagMode = new ListValue("Mode", new String[]{"All", "InBound", "OutBound"}, "All");
    @NotNull
    private final BoolValue fakeLagMoveOnly = new BoolValue("MoveOnly", true);
    @NotNull
    private final IntegerValue minRand = new IntegerValue() { // from class: net.ccbluex.liquidbounce.features.module.modules.exploit.FakeLag$minRand$1
        /* JADX INFO: Access modifiers changed from: package-private */
        {
            super("MinDelay", 0, 0, (int) Priority.INFO_INT, "ms");
        }

        @Override // net.ccbluex.liquidbounce.value.Value
        public /* bridge */ /* synthetic */ void onChanged(Integer num, Integer num2) {
            onChanged(num.intValue(), num2.intValue());
        }

        protected void onChanged(int oldValue, int newValue) {
            IntegerValue integerValue;
            integerValue = FakeLag.this.maxRand;
            int v = integerValue.get().intValue();
            if (v < newValue) {
                set((FakeLag$minRand$1) Integer.valueOf(v));
            }
        }
    };
    @NotNull
    private final IntegerValue maxRand = new IntegerValue() { // from class: net.ccbluex.liquidbounce.features.module.modules.exploit.FakeLag$maxRand$1
        /* JADX INFO: Access modifiers changed from: package-private */
        {
            super("MaxDelay", 0, 0, (int) Priority.INFO_INT, "ms");
        }

        @Override // net.ccbluex.liquidbounce.value.Value
        public /* bridge */ /* synthetic */ void onChanged(Integer num, Integer num2) {
            onChanged(num.intValue(), num2.intValue());
        }

        protected void onChanged(int oldValue, int newValue) {
            IntegerValue integerValue;
            integerValue = FakeLag.this.minRand;
            int v = integerValue.get().intValue();
            if (v > newValue) {
                set((FakeLag$maxRand$1) Integer.valueOf(v));
            }
        }
    };
    @NotNull
    private final BoolValue fakeLagInclude = new BoolValue("Include", false);
    @NotNull
    private final BoolValue fakeLagExclude = new BoolValue("Exclude", false);
    @NotNull
    private final TextValue fakeLagIncludeClasses = new TextValue("IncludeClass", "c0f,confirmtransaction,packetplayer,c17", new FakeLag$fakeLagIncludeClasses$1(this));
    @NotNull
    private final TextValue fakeLagExcludeClasses = new TextValue("ExcludeClass", "c0f,confirmtransaction,packetplayer,c17", new FakeLag$fakeLagExcludeClasses$1(this));
    @NotNull
    private final BoolValue debugValue = new BoolValue("Debug", false);
    @NotNull
    private final LinkedList<Packet<INetHandlerPlayServer>> outBus = new LinkedList<>();
    @NotNull
    private final LinkedList<Packet<INetHandlerPlayClient>> inBus = new LinkedList<>();
    @NotNull
    private final LinkedList<Packet<? extends INetHandler>> ignoreBus = new LinkedList<>();
    @NotNull
    private final MSTimer inTimer = new MSTimer();
    @NotNull
    private final MSTimer outTimer = new MSTimer();
    private int inDelay;
    private int outDelay;

    public final void debug(@NotNull String s) {
        Intrinsics.checkNotNullParameter(s, "s");
        if (this.debugValue.get().booleanValue()) {
            ClientUtils.displayChatMessage(Intrinsics.stringPlus("§7[§6§lFakeLag§7]§f ", s));
        }
    }

    @Override // net.ccbluex.liquidbounce.features.module.Module
    public void onEnable() {
        this.inBus.clear();
        this.outBus.clear();
        this.ignoreBus.clear();
        this.inTimer.reset();
        this.outTimer.reset();
    }

    @Override // net.ccbluex.liquidbounce.features.module.Module
    public void onDisable() {
        while (this.inBus.size() > 0) {
            Packet<INetHandlerPlayClient> poll = this.inBus.poll();
            if (poll != null) {
                poll.func_148833_a(MinecraftInstance.f362mc.func_147114_u());
            }
        }
        while (this.outBus.size() > 0) {
            Packet upPacket = this.outBus.poll();
            if (upPacket != null) {
                PacketUtils.sendPacketNoEvent(upPacket);
            }
        }
        this.inBus.clear();
        this.outBus.clear();
        this.ignoreBus.clear();
    }

    /* JADX WARN: Code restructure failed: missing block: B:29:0x00fe, code lost:
        if (r0 != null) goto L30;
     */
    /* JADX WARN: Code restructure failed: missing block: B:39:0x0182, code lost:
        if (r0 == null) goto L40;
     */
    @net.ccbluex.liquidbounce.event.EventTarget(priority = -100)
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct code enable 'Show inconsistent code' option in preferences
    */
    public final void onPacket(@org.jetbrains.annotations.NotNull net.ccbluex.liquidbounce.event.PacketEvent r8) {
        /*
            Method dump skipped, instructions count: 810
            To view this dump change 'Code comments level' option to 'DEBUG'
        */
        throw new UnsupportedOperationException("Method not decompiled: net.ccbluex.liquidbounce.features.module.modules.exploit.FakeLag.onPacket(net.ccbluex.liquidbounce.event.PacketEvent):void");
    }

    @EventTarget
    public final void onWorld(@NotNull WorldEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        this.inBus.clear();
        this.outBus.clear();
        this.ignoreBus.clear();
        this.inTimer.reset();
        this.outTimer.reset();
    }

    @EventTarget(priority = -5)
    public final void onUpdate(@NotNull UpdateEvent event) {
        Intrinsics.checkNotNullParameter(event, "event");
        if (MinecraftInstance.f362mc.func_147114_u() == null) {
            return;
        }
        if (!this.inBus.isEmpty() && ((this.fakeLagMoveOnly.get().booleanValue() && !MovementUtils.isMoving()) || this.inTimer.hasTimePassed(this.inDelay))) {
            while (this.inBus.size() > 0) {
                Packet<INetHandlerPlayClient> poll = this.inBus.poll();
                if (poll != null) {
                    poll.func_148833_a(MinecraftInstance.f362mc.func_147114_u());
                }
            }
            this.inDelay = RandomUtils.nextInt(this.minRand.get().intValue(), this.maxRand.get().intValue());
            this.inTimer.reset();
            debug("poll (in)");
        }
        if (this.outBus.isEmpty()) {
            return;
        }
        if ((this.fakeLagMoveOnly.get().booleanValue() && !MovementUtils.isMoving()) || this.outTimer.hasTimePassed(this.outDelay)) {
            while (this.outBus.size() > 0) {
                Packet upPacket = this.outBus.poll();
                if (upPacket != null) {
                    PacketUtils.sendPacketNoEvent(upPacket);
                }
            }
            this.outDelay = RandomUtils.nextInt(this.minRand.get().intValue(), this.maxRand.get().intValue());
            this.outTimer.reset();
            debug("poll (out)");
        }
    }
}
