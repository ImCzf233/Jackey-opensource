package net.ccbluex.liquidbounce.features.module.modules.exploit;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.vecmath.Vector3f;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.Render3DEvent;
import net.ccbluex.liquidbounce.event.UpdateEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.ClientUtils;
import net.ccbluex.liquidbounce.utils.MovementUtils;
import net.ccbluex.liquidbounce.utils.block.BlockUtils;
import net.ccbluex.liquidbounce.utils.render.RenderUtils;
import net.ccbluex.liquidbounce.value.BoolValue;
import net.ccbluex.liquidbounce.value.ListValue;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.client.renderer.entity.RenderManager;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.util.BlockPos;
import net.minecraft.util.MathHelper;
import net.minecraft.util.MovingObjectPosition;
import org.lwjgl.input.Mouse;
import org.lwjgl.opengl.GL11;

@ModuleInfo(name = "ItemTeleport", spacedName = "Item Teleport", description = "Allows you to pick up items far away by teleporting.", category = ModuleCategory.EXPLOIT)
/* loaded from: Jackey Client b2.jar:net/ccbluex/liquidbounce/features/module/modules/exploit/ItemTeleport.class */
public class ItemTeleport extends Module {
    private final ListValue modeValue = new ListValue("Mode", new String[]{"New", "Old"}, "New");
    private final BoolValue resetAfterTp = new BoolValue("ResetAfterTP", true);
    private final ListValue buttonValue = new ListValue("Button", new String[]{"Left", "Right", "Middle"}, "Middle");
    private int delay;
    private BlockPos endPos;
    private MovingObjectPosition objectPosition;

    @Override // net.ccbluex.liquidbounce.features.module.Module
    public void onDisable() {
        this.delay = 0;
        this.endPos = null;
        super.onDisable();
    }

    @EventTarget
    public void onUpdate(UpdateEvent event) {
        if (f362mc.field_71462_r == null && Mouse.isButtonDown(Arrays.asList(this.buttonValue.getValues()).indexOf(this.buttonValue.get())) && this.delay <= 0) {
            this.endPos = this.objectPosition.func_178782_a();
            if (BlockUtils.getBlock(this.endPos).func_149688_o() == Material.field_151579_a) {
                this.endPos = null;
                return;
            } else {
                ClientUtils.displayChatMessage("§7[§8§lItemTeleport§7] §3Position was set to §8" + this.endPos.func_177958_n() + "§3, §8" + this.endPos.func_177956_o() + "§3, §8" + this.endPos.func_177952_p());
                this.delay = 6;
            }
        }
        if (this.delay > 0) {
            this.delay--;
        }
        if (this.endPos != null && f362mc.field_71439_g.func_70093_af()) {
            if (!f362mc.field_71439_g.field_70122_E) {
                double endX = this.endPos.func_177958_n() + 0.5d;
                double endY = this.endPos.func_177956_o() + 1.0d;
                double endZ = this.endPos.func_177952_p() + 0.5d;
                String lowerCase = this.modeValue.get().toLowerCase();
                boolean z = true;
                switch (lowerCase.hashCode()) {
                    case 108960:
                        if (lowerCase.equals("new")) {
                            z = true;
                            break;
                        }
                        break;
                    case 110119:
                        if (lowerCase.equals("old")) {
                            z = false;
                            break;
                        }
                        break;
                }
                switch (z) {
                    case false:
                        for (Vector3f vector3f : vanillaTeleportPositions(endX, endY, endZ, 4.0d)) {
                            f362mc.func_147114_u().func_147297_a(new C03PacketPlayer.C04PacketPlayerPosition(vector3f.getX(), vector3f.getY(), vector3f.getZ(), false));
                        }
                        break;
                    case true:
                        for (Vector3f vector3f2 : vanillaTeleportPositions(endX, endY, endZ, 5.0d)) {
                            f362mc.func_147114_u().func_147297_a(new C03PacketPlayer.C04PacketPlayerPosition(f362mc.field_71439_g.field_70165_t, f362mc.field_71439_g.field_70163_u, f362mc.field_71439_g.field_70161_v, true));
                            f362mc.func_147114_u().func_147297_a(new C03PacketPlayer.C04PacketPlayerPosition(vector3f2.x, vector3f2.y, vector3f2.z, true));
                            f362mc.func_147114_u().func_147297_a(new C03PacketPlayer.C04PacketPlayerPosition(f362mc.field_71439_g.field_70165_t, f362mc.field_71439_g.field_70163_u, f362mc.field_71439_g.field_70161_v, true));
                            f362mc.func_147114_u().func_147297_a(new C03PacketPlayer.C04PacketPlayerPosition(f362mc.field_71439_g.field_70165_t, f362mc.field_71439_g.field_70163_u + 4.0d, f362mc.field_71439_g.field_70161_v, true));
                            f362mc.func_147114_u().func_147297_a(new C03PacketPlayer.C04PacketPlayerPosition(vector3f2.x, vector3f2.y, vector3f2.z, true));
                            MovementUtils.forward(0.04d);
                        }
                        break;
                }
                if (this.resetAfterTp.get().booleanValue()) {
                    this.endPos = null;
                }
                ClientUtils.displayChatMessage("§7[§8§lItemTeleport§7] §3Tried to collect items");
                return;
            }
            f362mc.field_71439_g.func_70664_aZ();
        }
    }

    @EventTarget
    public void onRender3D(Render3DEvent event) {
        this.objectPosition = f362mc.field_71439_g.func_174822_a(1000.0d, event.getPartialTicks());
        if (this.objectPosition.func_178782_a() == null) {
            return;
        }
        int x = this.objectPosition.func_178782_a().func_177958_n();
        int y = this.objectPosition.func_178782_a().func_177956_o();
        int z = this.objectPosition.func_178782_a().func_177952_p();
        if (BlockUtils.getBlock(this.objectPosition.func_178782_a()).func_149688_o() != Material.field_151579_a) {
            RenderManager renderManager = f362mc.func_175598_ae();
            GL11.glBlendFunc(770, 771);
            GL11.glEnable(3042);
            GL11.glLineWidth(2.0f);
            GL11.glDisable(3553);
            GL11.glDisable(2929);
            GL11.glDepthMask(false);
            RenderUtils.glColor(BlockUtils.getBlock(this.objectPosition.func_178782_a().func_177984_a()).func_149688_o() != Material.field_151579_a ? new Color(255, 0, 0, 90) : new Color(0, 255, 0, 90));
            RenderUtils.drawFilledBox(new AxisAlignedBB(x - renderManager.field_78725_b, (y + 1) - renderManager.field_78726_c, z - renderManager.field_78723_d, (x - renderManager.field_78725_b) + 1.0d, (y + 1.2d) - renderManager.field_78726_c, (z - renderManager.field_78723_d) + 1.0d));
            GL11.glEnable(3553);
            GL11.glEnable(2929);
            GL11.glDepthMask(true);
            GL11.glDisable(3042);
            RenderUtils.renderNameTag(Math.round(f362mc.field_71439_g.func_70011_f(x, y, z)) + "m", x + 0.5d, y + 1.7d, z + 0.5d);
            GlStateManager.func_179117_G();
        }
    }

    private List<Vector3f> vanillaTeleportPositions(double tpX, double tpY, double tpZ, double speed) {
        List<Vector3f> positions = new ArrayList<>();
        double posX = tpX - f362mc.field_71439_g.field_70165_t;
        double posZ = tpZ - f362mc.field_71439_g.field_70161_v;
        float yaw = (float) (((Math.atan2(posZ, posX) * 180.0d) / 3.141592653589793d) - 90.0d);
        double tmpY = f362mc.field_71439_g.field_70163_u;
        double steps = 1.0d;
        double d = speed;
        while (true) {
            double d2 = d;
            if (d2 >= getDistance(f362mc.field_71439_g.field_70165_t, f362mc.field_71439_g.field_70163_u, f362mc.field_71439_g.field_70161_v, tpX, tpY, tpZ)) {
                break;
            }
            steps += 1.0d;
            d = d2 + speed;
        }
        double d3 = speed;
        while (true) {
            double d4 = d3;
            if (d4 < getDistance(f362mc.field_71439_g.field_70165_t, f362mc.field_71439_g.field_70163_u, f362mc.field_71439_g.field_70161_v, tpX, tpY, tpZ)) {
                double tmpX = f362mc.field_71439_g.field_70165_t - (Math.sin(Math.toRadians(yaw)) * d4);
                double tmpZ = f362mc.field_71439_g.field_70161_v + (Math.cos(Math.toRadians(yaw)) * d4);
                tmpY -= (f362mc.field_71439_g.field_70163_u - tpY) / steps;
                positions.add(new Vector3f((float) tmpX, (float) tmpY, (float) tmpZ));
                d3 = d4 + speed;
            } else {
                positions.add(new Vector3f((float) tpX, (float) tpY, (float) tpZ));
                return positions;
            }
        }
    }

    private double getDistance(double x1, double y1, double z1, double x2, double y2, double z2) {
        double d0 = x1 - x2;
        double d1 = y1 - y2;
        double d2 = z1 - z2;
        return MathHelper.func_76133_a((d0 * d0) + (d1 * d1) + (d2 * d2));
    }
}
