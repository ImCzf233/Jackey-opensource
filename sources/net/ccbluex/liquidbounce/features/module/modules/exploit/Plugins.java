package net.ccbluex.liquidbounce.features.module.modules.exploit;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import jdk.internal.dynalink.CallSiteDescriptor;
import joptsimple.internal.Strings;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.event.UpdateEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.utils.ClientUtils;
import net.ccbluex.liquidbounce.utils.timer.TickTimer;
import net.minecraft.network.play.client.C14PacketTabComplete;
import net.minecraft.network.play.server.S3APacketTabComplete;

@ModuleInfo(name = "Plugins", description = "Allows you to see which plugins the server is using.", category = ModuleCategory.EXPLOIT)
/* loaded from: Jackey Client b2.jar:net/ccbluex/liquidbounce/features/module/modules/exploit/Plugins.class */
public class Plugins extends Module {
    private final TickTimer tickTimer = new TickTimer();

    @Override // net.ccbluex.liquidbounce.features.module.Module
    public void onEnable() {
        if (f362mc.field_71439_g == null) {
            return;
        }
        f362mc.func_147114_u().func_147297_a(new C14PacketTabComplete("/"));
        this.tickTimer.reset();
    }

    @EventTarget
    public void onUpdate(UpdateEvent event) {
        this.tickTimer.update();
        if (this.tickTimer.hasTimePassed(20)) {
            ClientUtils.displayChatMessage("§cTimed out.");
            this.tickTimer.reset();
            setState(false);
        }
    }

    @EventTarget
    public void onPacket(PacketEvent event) {
        if (event.getPacket() instanceof S3APacketTabComplete) {
            S3APacketTabComplete s3APacketTabComplete = event.getPacket();
            List<String> plugins = new ArrayList<>();
            String[] commands = s3APacketTabComplete.func_149630_c();
            for (String command1 : commands) {
                String[] command = command1.split(CallSiteDescriptor.TOKEN_DELIMITER);
                if (command.length > 1) {
                    String pluginName = command[0].replace("/", "");
                    if (!plugins.contains(pluginName)) {
                        plugins.add(pluginName);
                    }
                }
            }
            Collections.sort(plugins);
            if (!plugins.isEmpty()) {
                ClientUtils.displayChatMessage("§aPlugins §7(§8" + plugins.size() + "§7): §c" + Strings.join((String[]) plugins.toArray(new String[0]), "§7, §c"));
            } else {
                ClientUtils.displayChatMessage("§cNo plugins found.");
            }
            setState(false);
            this.tickTimer.reset();
        }
    }
}
